import os
import subprocess
from jinja2 import Environment, FileSystemLoader


class FirebaseGenerator:
    def __init__(self, app_dir):
        self.app_dir = app_dir

        # Set up Jinja2 environment
        template_dir = os.path.join(os.path.dirname(os.path.dirname(__file__)), 'templates')
        self.jinja_env = Environment(loader=FileSystemLoader(template_dir))

    def setup_firebase(self):
        """Setup Firebase for the Flutter app"""
        # Check if Flutter Fire CLI is installed
        self._check_flutterfire_cli()

        # Configure Firebase
        self._configure_firebase()

        # Update pubspec.yaml with Firebase dependencies
        self._update_pubspec_with_firebase()

        # Generate Firebase options file
        self._generate_firebase_options()

    def _check_flutterfire_cli(self):
        """Check if FlutterFire CLI is installed, and install if not"""
        try:
            subprocess.run(['flutterfire', '--version'], check=True, capture_output=True)
            print("FlutterFire CLI is already installed.")
        except (subprocess.CalledProcessError, FileNotFoundError):
            print("Installing FlutterFire CLI...")
            subprocess.run(['dart', 'pub', 'global', 'activate', 'flutterfire_cli'], check=True)

    def _configure_firebase(self):
        """Configure Firebase using FlutterFire CLI"""
        # Run FlutterFire configure command
        print("Configuring Firebase...")
        subprocess.run(
            ['flutterfire', 'configure', '--project=your-firebase-project', '--out=lib/firebase_options.dart',
             '--platforms=android,ios,web'],
            cwd=self.app_dir,
            check=True
        )

    def _update_pubspec_with_firebase(self):
        """Update pubspec.yaml with Firebase dependencies"""
        pubspec_path = os.path.join(self.app_dir, 'pubspec.yaml')

        # Read existing pubspec
        with open(pubspec_path, 'r') as f:
            pubspec_content = f.read()

        # Add Firebase dependencies if not already present
        dependencies_to_add = [
            "firebase_core: ^2.9.0",
            "firebase_auth: ^4.4.0",
            "cloud_firestore: ^4.5.0",
            "firebase_storage: ^11.1.0",
            "firebase_analytics: ^10.2.0",
        ]

        # Check if dependencies section exists
        if 'dependencies:' in pubspec_content:
            # Find dependencies section and add Firebase dependencies
            dependencies_section = pubspec_content.split('dependencies:')[1].split('\n\n')[0]

            # Add missing dependencies
            for dependency in dependencies_to_add:
                package_name = dependency.split(':')[0].strip()
                if package_name not in dependencies_section:
                    # Find the position to insert the new dependency
                    dependencies_end = pubspec_content.find('dependencies:') + len('dependencies:')

                    # Insert the new dependency
                    pubspec_content = pubspec_content[:dependencies_end] + f'\n  {dependency}' + pubspec_content[
                                                                                                 dependencies_end:]

        # Write updated pubspec
        with open(pubspec_path, 'w', encoding='utf-8', newline='\n') as f:
            f.write(pubspec_content)

        # Run flutter pub get
        subprocess.run(['flutter', 'pub', 'get'], cwd=self.app_dir, check=True)

    def _generate_firebase_options(self):
        """Generate Firebase options file if not generated by FlutterFire CLI"""
        firebase_options_path = os.path.join(self.app_dir, 'lib', 'firebase_options.dart')

        # Check if firebase_options.dart exists
        if not os.path.exists(firebase_options_path):
            # Generate a placeholder file
            template = self.jinja_env.get_template('firebase/firebase_options.dart.jinja')
            output = template.render()

            with open(firebase_options_path, 'w', encoding='utf-8', newline='\n') as f:
                f.write(output)

            print("Generated placeholder firebase_options.dart. Please update it with your Firebase configuration.")